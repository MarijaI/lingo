# encoding: utf-8

class TestAttendeeTokenizer < AttendeeTestCase

  def setup
    @wiki = [
      'Test [[Link|internal link]] and [http://example.com external link].',
      'Try __MAGIC__ with [[Multiline',
      'link (because we can)]].',
      '[[Category:cat1]]',
      'Link to [[:Category:cat2]].',
      '== Heading ==',
      '{{Template}}',
      'Function with {{#func|param|{{{var}}}}} and <nowiki>{{{var}}}</nowiki>!',
      '{{Multi',
      ' | line=1',
      ' | [[link]]',
      ' | {{{var}}}',
      '',
      '}}'
    ]

    @html = [
      'test <a>test</a> test',
      '<b>test <a>test</a></b>',
      'test <a test="test"><b>test</b></a>, test',
      '<a>test</a><b test="test">test</b><a>test</a>'
    ]
  end

  def test_basic
    meet({}, [
      'Dies ist ein Test.'
    ], [
      tk('Dies|WORD'), tk('ist|WORD'), tk('ein|WORD'), tk('Test|WORD'), tk('.|PUNC')
    ])
  end

  def test_complex
    meet({}, [
      '1964 www.vorhauer.de bzw. nasenbär, ()'
    ], [
      tk('1964|NUMS'),
      tk('www.vorhauer.de|URLS'),
      tk('bzw|WORD'),
      tk('.|PUNC'),
      tk('nasenbär|WORD'),
      tk(',|PUNC'),
      tk('(|OTHR'),
      tk(')|OTHR')
    ])
  end

  def test_wiki1
    meet({}, @wiki, [
      tk('Test|WORD'),
      tk('[|OTHR'),
      tk('[|OTHR'),
      tk('Link|WORD'),
      tk('||OTHR'),
      tk('internal|WORD'),
      tk('link|WORD'),
      tk(']|OTHR'),
      tk(']|OTHR'),
      tk('and|WORD'),
      tk('[|OTHR'),
      tk('http://example.com|URLS'),
      tk('external|WORD'),
      tk('link|WORD'),
      tk(']|OTHR'),
      tk('.|PUNC'),
      tk('Try|WORD'),
      tk('_|OTHR'),
      tk('_|OTHR'),
      tk('MAGIC|WORD'),
      tk('_|OTHR'),
      tk('_|OTHR'),
      tk('with|WORD'),
      tk('[|OTHR'),
      tk('[|OTHR'),
      tk('Multiline|WORD'),
      tk('link|WORD'),
      tk('(|OTHR'),
      tk('because|WORD'),
      tk('we|WORD'),
      tk('can|WORD'),
      tk(')|OTHR'),
      tk(']|OTHR'),
      tk(']|OTHR'),
      tk('.|PUNC'),
      tk('[|OTHR'),
      tk('[|OTHR'),
      tk('Category|WORD'),
      tk(':|PUNC'),
      tk('cat1|WORD'),
      tk(']|OTHR'),
      tk(']|OTHR'),
      tk('Link|WORD'),
      tk('to|WORD'),
      tk('[|OTHR'),
      tk('[|OTHR'),
      tk(':|PUNC'),
      tk('Category|WORD'),
      tk(':|PUNC'),
      tk('cat2|WORD'),
      tk(']|OTHR'),
      tk(']|OTHR'),
      tk('.|PUNC'),
      tk('=|OTHR'),
      tk('=|OTHR'),
      tk('Heading|WORD'),
      tk('=|OTHR'),
      tk('=|OTHR'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('Template|WORD'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('Function|WORD'),
      tk('with|WORD'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('#|OTHR'),
      tk('func|WORD'),
      tk('||OTHR'),
      tk('param|WORD'),
      tk('||OTHR'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('var|WORD'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('and|WORD'),
      tk('<|OTHR'),
      tk('nowiki|WORD'),
      tk('>|OTHR'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('var|WORD'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('<|OTHR'),
      tk('/|OTHR'),
      tk('nowiki|WORD'),
      tk('>|OTHR'),
      tk('!|PUNC'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('Multi|WORD'),
      tk('||OTHR'),
      tk('line|WORD'),
      tk('=|OTHR'),
      tk('1|NUMS'),
      tk('||OTHR'),
      tk('[|OTHR'),
      tk('[|OTHR'),
      tk('link|WORD'),
      tk(']|OTHR'),
      tk(']|OTHR'),
      tk('||OTHR'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('{|OTHR'),
      tk('var|WORD'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('}|OTHR'),
      tk('}|OTHR')
    ])
  end

  def test_wiki2
    meet({ 'space' => true, 'tags' => true, 'wiki' => true }, @wiki, [
      tk('Test|WORD'),
      tk(' |SPAC'),
      tk('[[|WIKI'),
      tk('Link|internal link]]|WIKI'),
      tk(' |SPAC'),
      tk('and|WORD'),
      tk(' |SPAC'),
      tk('[http://|WIKI'),
      tk('example.com external link]|WIKI'),
      tk('.|PUNC'),
      tk('Try|WORD'),
      tk(' |SPAC'),
      tk('__MAGIC__|WIKI'),
      tk(' |SPAC'),
      tk('with|WORD'),
      tk(' |SPAC'),
      tk('[[|WIKI'),
      tk('Multiline|WIKI'),
      tk('link (because we can)]]|WIKI'),
      tk('.|PUNC'),
      tk('[[|WIKI'),
      tk('Category:cat1]]|WIKI'),
      tk('Link|WORD'),
      tk(' |SPAC'),
      tk('to|WORD'),
      tk(' |SPAC'),
      tk('[[|WIKI'),
      tk(':Category:cat2]]|WIKI'),
      tk('.|PUNC'),
      tk('== Heading ==|WIKI'),
      tk('{{|WIKI'),
      tk('Template}}|WIKI'),
      tk('Function|WORD'),
      tk(' |SPAC'),
      tk('with|WORD'),
      tk(' |SPAC'),
      tk('{{|WIKI'),
      tk('#func|param||WIKI'),
      tk('{{{|WIKI'),
      tk('var}}}|WIKI'),
      tk('}}|WIKI'),
      tk(' |SPAC'),
      tk('and|WORD'),
      tk(' |SPAC'),
      tk('<|HTML'),
      tk('nowiki>|HTML'),
      tk('{{{|WIKI'),
      tk('var}}}|WIKI'),
      tk('<|HTML'),
      tk('/nowiki>|HTML'),
      tk('!|PUNC'),
      tk('{{|WIKI'),
      tk('Multi|WIKI'),
      tk(' | line=1|WIKI'),
      tk(' | |WIKI'),
      tk('[[|WIKI'),
      tk('link]]|WIKI'),
      tk('|WIKI'),
      tk(' | |WIKI'),
      tk('{{{|WIKI'),
      tk('var}}}|WIKI'),
      tk('|WIKI'),
      tk('|WIKI'),
      tk('}}|WIKI')
    ])
  end

  def test_html1
    meet({ 'tags' => true }, @html, [
      tk('test|WORD'),
      tk('<|HTML'),
      tk('a>|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('/a>|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('b>|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('a>|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('/a>|HTML'),
      tk('<|HTML'),
      tk('/b>|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('a test="test">|HTML'),
      tk('<|HTML'),
      tk('b>|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('/b>|HTML'),
      tk('<|HTML'),
      tk('/a>|HTML'),
      tk(',|PUNC'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('a>|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('/a>|HTML'),
      tk('<|HTML'),
      tk('b test="test">|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('/b>|HTML'),
      tk('<|HTML'),
      tk('a>|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('/a>|HTML')
    ])
  end

  def test_html2
    meet({ 'skip-tags' => 'a' }, @html, [
      tk('test|WORD'),
      tk('<|SKIP'),
      tk('a>|SKIP'),
      tk('test|SKIP'),
      tk('<|SKIP'),
      tk('/a>|SKIP'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('b>|HTML'),
      tk('test|WORD'),
      tk('<|SKIP'),
      tk('a>|SKIP'),
      tk('test|SKIP'),
      tk('<|SKIP'),
      tk('/a>|SKIP'),
      tk('<|HTML'),
      tk('/b>|HTML'),
      tk('test|WORD'),
      tk('<|SKIP'),
      tk('a test="test">|SKIP'),
      tk('<|SKIP'),
      tk('b>|SKIP'),
      tk('test|SKIP'),
      tk('<|SKIP'),
      tk('/b>|SKIP'),
      tk('<|SKIP'),
      tk('/a>|SKIP'),
      tk(',|PUNC'),
      tk('test|WORD'),
      tk('<|SKIP'),
      tk('a>|SKIP'),
      tk('test|SKIP'),
      tk('<|SKIP'),
      tk('/a>|SKIP'),
      tk('<|HTML'),
      tk('b test="test">|HTML'),
      tk('test|WORD'),
      tk('<|HTML'),
      tk('/b>|HTML'),
      tk('<|SKIP'),
      tk('a>|SKIP'),
      tk('test|SKIP'),
      tk('<|SKIP'),
      tk('/a>|SKIP')
    ])
  end

end
